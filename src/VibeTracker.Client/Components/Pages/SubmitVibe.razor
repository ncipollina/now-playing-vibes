@page "/submit-vibe"
@using System.Net.Http.Json
@using VibeTracker.Shared
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Submit Vibe</PageTitle>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">🎧 Submit Your Vibe</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="@vibeRequest" OnValidSubmit="@HandleSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="vibeType" class="form-label">Vibe Type</label>
                            <InputSelect @bind-Value="vibeRequest.VibeType" class="form-select" id="vibeType">
                                <option value="">Select a vibe...</option>
                                <option value="Lo-fi">🎵 Lo-fi</option>
                                <option value="Metal">🤘 Metal</option>
                                <option value="Synthwave">🌆 Synthwave</option>
                                <option value="Classical">🎼 Classical</option>
                                <option value="Jazz">🎷 Jazz</option>
                                <option value="Rock">🎸 Rock</option>
                                <option value="Electronic">🎛️ Electronic</option>
                                <option value="Indie">🎤 Indie</option>
                                <option value="Hip-Hop">🎤 Hip-Hop</option>
                                <option value="Folk">🪕 Folk</option>
                            </InputSelect>
                        </div>

                        <div class="mb-3">
                            <label for="message" class="form-label">What are you listening to or doing?</label>
                            <InputTextArea @bind-Value="vibeRequest.Message" class="form-control" id="message" rows="3" placeholder="Share your current vibe..."></InputTextArea>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary btn-lg" disabled="@isSubmitting">
                                @if (isSubmitting)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                    <span>Submitting...</span>
                                }
                                else
                                {
                                    <span>Submit Vibe & Find Music</span>
                                }
                            </button>
                        </div>
                    </EditForm>

                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
                            <i class="bi bi-check-circle-fill me-2"></i>
                            @successMessage
                            <button type="button" class="btn-close" @onclick="() => successMessage = string.Empty"></button>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            @errorMessage
                            <button type="button" class="btn-close" @onclick="() => errorMessage = string.Empty"></button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Music Results Section -->
    @if (showMusicResults)
    {
        <div class="row justify-content-center mt-4">
            <div class="col-md-10">
                <MusicResults VibeType="@vibeRequest.VibeType" ShowResults="@showMusicResults" />
            </div>
        </div>
    }
</div>

@code {
    private VibeRequest vibeRequest = new();
    private bool isSubmitting = false;
    private string successMessage = string.Empty;
    private string errorMessage = string.Empty;
    private bool showMusicResults = false;

    private async Task HandleSubmit()
    {
        if (string.IsNullOrWhiteSpace(vibeRequest.VibeType) || string.IsNullOrWhiteSpace(vibeRequest.Message))
        {
            errorMessage = "Please select a vibe type and enter a message.";
            return;
        }

        isSubmitting = true;
        errorMessage = string.Empty;
        successMessage = string.Empty;

        try
        {
            var response = await Http.PostAsJsonAsync("/vibes", vibeRequest);
            
            if (response.IsSuccessStatusCode)
            {
                successMessage = "Vibe submitted successfully! 🎉 Check out some music recommendations below!";
                showMusicResults = true;
                
                // Don't reset form or navigate - let user see music results
                // Auto-navigate to home after 10 seconds to give time to explore music
                await Task.Delay(10000);
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = "Failed to submit vibe. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }
}